// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	entity "github.com/powerdigital/go-micro/internal/service/v1/user/entity"
	mock "github.com/stretchr/testify/mock"
)

// UserQueue is an autogenerated mock type for the UserQueue type
type UserQueue struct {
	mock.Mock
}

// PublishUser provides a mock function with given fields: user
func (_m *UserQueue) PublishUser(user entity.User) error {
	ret := _m.Called(user)

	if len(ret) == 0 {
		panic("no return value specified for PublishUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(entity.User) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewUserQueue creates a new instance of UserQueue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserQueue(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserQueue {
	mock := &UserQueue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
